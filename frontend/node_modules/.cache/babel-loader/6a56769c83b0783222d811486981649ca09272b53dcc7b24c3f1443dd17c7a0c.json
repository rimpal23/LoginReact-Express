{"ast":null,"code":"var _jsxFileName = \"/Users/rimpaldhillon/Documents/Project/Task2/react-login/frontend/src/components/login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setpassword] = useState('');\n  const [error, setError] = useState('');\n  const Navigate = useNavigate();\n  const loginAction = () => {\n    const hardcodedemail = 'test@example.com';\n    const hardcodedpwd = 'pass1234';\n    if (email === hardcodedemail && password === hardcodedpwd) {\n      onLogin(email);\n      Navigate(\"/welcome\");\n    } else {\n      setError(\"Username or Password is incorrect\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"loginpg\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign in With\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        class: \"fb\",\n        onClick: () => window.location.href = 'https://facebook.com',\n        children: \"Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.href = 'https://google.com/',\n        children: \"Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, this), '\\n', /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setpassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loginAction,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Signup now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 2\n  }, this);\n};\n_s(Login, \"UcUxQf+xZh48+cLctFLJJjyMYW0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","onLogin","_s","email","setEmail","password","setpassword","error","setError","Navigate","loginAction","hardcodedemail","hardcodedpwd","class","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","location","href","type","value","onChange","e","target","required","style","color","_c","$RefreshReg$"],"sources":["/Users/rimpaldhillon/Documents/Project/Task2/react-login/frontend/src/components/login.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './login.css';\n\nconst Login = ({ onLogin }) => {\n const [email, setEmail] = useState('');\n const [password, setpassword] = useState('');\n const [error, setError] = useState('');\n const Navigate = useNavigate();\n\n const loginAction = () =>{\n    const hardcodedemail = 'test@example.com';\n    const hardcodedpwd = 'pass1234';\n\n    if(email === hardcodedemail && password === hardcodedpwd){\n        onLogin(email);\n        Navigate(\"/welcome\");\n    }\n    else{\n        setError(\"Username or Password is incorrect\");\n    }\n };\n\n return(\n <div class = \"loginpg\">\n    <div class = \"container\">\n    <h2>Sign in With</h2>\n    <button class = \"fb\" onClick={() => window.location.href = 'https://facebook.com'}>Facebook</button>&nbsp;&nbsp;\n    <button onClick={() => window.location.href = 'https://google.com/'}>Google</button>{'\\n'}\n    <label>Username</label>\n    <input type = \"email\" value={email} onChange={(e) => setEmail(e.target.value)} required/>\n    <label>Password</label>\n    <input type = \"password\" value={password} onChange={(e) => setpassword(e.target.value)} required/>\n    {error && <div style = {{color: 'red'}}>{error}</div>}\n    <button onClick={loginAction}>Sign In</button>\n    <div>Signup now</div>\n    </div>\n </div>\n\n );\n\n\n\n\n}\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}